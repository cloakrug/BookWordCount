<Project Sdk="Microsoft.NET.Sdk.Web">

	<PropertyGroup>
		<TargetFramework>net8.0</TargetFramework>
		<Nullable>enable</Nullable>
		<IsPackable>false</IsPackable>
		<ImplicitUsings>enable</ImplicitUsings>
		<SpaRoot>ClientApp/</SpaRoot>
	</PropertyGroup>

	<ItemGroup>
		<PackageReference Include="Microsoft.AspNetCore.Authentication.JwtBearer" Version="8.0.14" />
		<PackageReference Include="Microsoft.AspNetCore.Cors" Version="2.3.0" /> 
		<PackageReference Include="AutoMapper" Version="11.0.1" />
		<PackageReference Include="AutoMapper.Extensions.Microsoft.DependencyInjection" Version="11.0.0" />
		<PackageReference Include="Microsoft.EntityFrameworkCore" Version="8.0.14" />
		<PackageReference Include="Microsoft.EntityFrameworkCore.Design" Version="8.0.14">
		  <PrivateAssets>all</PrivateAssets>
		  <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
		</PackageReference>
		<PackageReference Include="Microsoft.EntityFrameworkCore.InMemory" Version="8.0.14" />
		<PackageReference Include="Npgsql.EntityFrameworkCore.PostgreSQL" Version="8.0.11" />
		<PackageReference Include="Swashbuckle.AspNetCore" Version="6.9.0" />
	</ItemGroup>

	<ItemGroup>
		<Compile Remove="ClientApp\.angular\**" />
		<Content Remove="$(SpaRoot)**" />
		<Content Remove="ClientApp\.angular\**" />
		<EmbeddedResource Remove="ClientApp\.angular\**" />
		<None Remove="$(SpaRoot)**" />
		<None Remove="ClientApp\.angular\**" />
		<None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
	</ItemGroup>

	<ItemGroup>
		<None Include="wwwroot\*" />
	</ItemGroup>

	<ItemGroup>
	  <None Remove="ClientApp\src\app\AuthInterceptor.ts" />
	  <None Remove="ClientApp\src\app\models\book.ts" />
	  <None Remove="ClientApp\src\app\models\bookstatsmodel.ts" />
	  <None Remove="ClientApp\src\app\models\genre.ts" />
	  <None Remove="ClientApp\src\app\models\userbookstats.ts" />
	  <None Remove="ClientApp\src\app\search-bar\searchresult.ts" />
	</ItemGroup>

	<ItemGroup>
	  <TypeScriptCompile Include="ClientApp\src\app\models\book.ts" />
	  <TypeScriptCompile Include="ClientApp\src\app\models\bookstatsmodel.ts" />
	  <TypeScriptCompile Include="ClientApp\src\app\models\genre.ts" />
	  <TypeScriptCompile Include="ClientApp\src\app\models\searchresult.ts" />
	  <TypeScriptCompile Include="ClientApp\src\app\AuthInterceptor.ts" />
	  <TypeScriptCompile Include="ClientApp\src\app\models\userbookstats.ts" />
	</ItemGroup>

	<Target Name="EnsureNodeModulesAndNPMInstall" BeforeTargets="Build" Condition="'$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules')">
		<!-- Ensure Node.js is installed -->
		<Exec Command="node --version" ContinueOnError="true">
			<Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
		</Exec>
		<Message Importance="high" Text="Node modules not found. Running npm install..." />
		<Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
	</Target>

	<Target Name="BuildSpa" Condition="'$(Configuration)' == 'Debug'" AfterTargets="EnsureNodeModulesAndNPMInstall">
		<Message Importance="high" Text="Building frontend..." />
		<Exec WorkingDirectory="$(SpaRoot)" Command="npm run build" />
	</Target>
</Project>
